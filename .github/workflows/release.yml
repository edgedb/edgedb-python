name: Release

on:
  workflow_dispatch:
    inputs: {}

  pull_request:
    branches:
      - "master"
      - "ci"
      - "[0-9]+.[0-9x]+*"
    paths:
      - "edgedb/_version.py"

jobs:
  build-sdist:
    runs-on: ubuntu-latest

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 50
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Build source distribution
      run: |
        pip install -U setuptools wheel pip
        python setup.py sdist

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/*.tar.*

  build-wheels-matrix:
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set-matrix.outputs.include }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: pip install cibuildwheel==2.19.1
      - id: set-matrix
        # Cannot test on Musl distros yet.
        run: |
          MATRIX_INCLUDE=$(
            {
              cibuildwheel --print-build-identifiers --platform linux --arch x86_64,aarch64 | grep cp | grep many |  jq -nRc '{"only": inputs, "os": "ubuntu-latest"}' \
              && cibuildwheel --print-build-identifiers --platform macos --arch x86_64,arm64 | grep cp |  jq -nRc '{"only": inputs, "os": "macos-latest"}' \
              && cibuildwheel --print-build-identifiers --platform windows --arch AMD64 | grep cp |  jq -nRc '{"only": inputs, "os": "windows-2019"}'
            } | jq -sc
          )
          echo "include=$MATRIX_INCLUDE" >> $GITHUB_OUTPUT
  build-wheels:
    needs: build-wheels-matrix
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.only }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build-wheels-matrix.outputs.include) }}

    defaults:
      run:
        shell: bash

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: 1
      EDGEDB_SERVER_VERSION: 5

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 50
        submodules: true

    - name: Setup WSL
      if: ${{ matrix.os == 'windows-2019' }}
      uses: vampire/setup-wsl@v2
      with:
        wsl-shell-user: edgedb
        additional-packages:
          ca-certificates
          curl

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v2

    - name: Install EdgeDB
      uses: edgedb/setup-edgedb@v1
      with:
        server-version: ${{ env.EDGEDB_SERVER_VERSION }}

    - uses: pypa/cibuildwheel@v2.19.1
      with:
        only: ${{ matrix.only }}
      env:
        EDGEDB_TEST_CODEGEN_ASSERT_SUFFIX: .assert${{ env.EDGEDB_SERVER_VERSION }}
        CIBW_BUILD_VERBOSITY: 1
        CIBW_BEFORE_ALL_LINUX: >
          .github/workflows/install-edgedb.sh
        CIBW_TEST_EXTRAS: "test"
        CIBW_TEST_COMMAND: >
          python {project}/tests/__init__.py
        CIBW_TEST_COMMAND_WINDOWS: >
          python {project}\tests\__init__.py
        CIBW_TEST_COMMAND_LINUX: >
          PY=`which python`
          && CODEGEN=`which edgedb-py`
          && chmod -R go+rX "$(dirname $(dirname $(dirname $PY)))"
          && su -l edgedb -c "EDGEDB_PYTHON_TEST_CODEGEN_CMD=$CODEGEN $PY {project}/tests/__init__.py"

    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: wheelhouse/*.whl
